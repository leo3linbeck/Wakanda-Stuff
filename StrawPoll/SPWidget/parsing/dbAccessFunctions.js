/*** @author Leo Linbeck III*/var democraticParty = ds.Party.find('abbreviation = "D"');var republicanParty = ds.Party.find('abbreviation = "R"');var thirdParty = ds.Party.find('abbreviation = "U"');function getOrCreateDistrict(state, number, type) {		var district = ds.District.find('state.ID = :1 and number = :2 and type = :3', state.ID, number, type);		if ( district == null) {		district = ds.District.createEntity();		district.name = state.abbreviation + ' - ' + number;		district.number = number;		district.state = state;		district.type = type;		district.save();	}		return district;}function getOrCreateDistrictByName(state, name, type) {		var district = ds.District.find('state.ID = :1 and name = :2 and type = :3', state.ID, name, type);		if ( district == null) {		district = ds.District.createEntity();		district.name = state.abbreviation + ' - ' + name;		var reArray = /(\d+)/.exec(name);		if (reArray == null)			district.number = 0;		else			district.number = reArray[1];		district.state = state;		district.type = type;		district.save();	}		return district;}function getOrCreateCandidate(politician, election, votes, incumbent, won) {		var candidate = ds.Campaign.find('politician.ID = :1 and election.ID = :2', politician.ID, election.ID);		if ( candidate == null) {		candidate = ds.Campaign.createEntity();		candidate.politician = politician;		candidate.election = election;		candidate.votes = votes;		candidate.incumbent = incumbent;		candidate.won = won;		candidate.save();	}		return candidate;}function getOrCreatePolitician(fullName, url, firstElected, partyCode, state) {	var politician = {};		fullName = fullName.replace('"','').replace('"','');	if (fullName[0] == '[') {		fullName = fullName.slice(10,fullName.length - 1);		firstElected = null;	}		if (url == null)		politician = ds.Politician.find('fullName = :1 and state.ID = :2 and party.abbreviation = :3', fullName, state.ID, partyCode);	else		politician = ds.Politician.find('fullName = :1 and state.ID = :2 and url = :3', fullName, state.ID, url);			if ( politician == null ) {		politician = ds.Politician.createEntity();		politician.fullName = fullName;		politician.firstElected = firstElected;		if (partyCode == 'R')			politician.party = republicanParty;		else if (partyCode == 'D')			politician.party = democraticParty;		else			politician.party = thirdParty;		politician.url = url;		politician.state = state;		politician.save();	}		return politician;}function getOrCreateElection(district, year, type) {		var election = ds.Election.find('district.ID = :1 and year = :2 and type = :3', district.ID, year, type);		if ( election == null) {		election = ds.Election.createEntity();		election.year = year;		election.district = district;		election.type = type;		election.primary = type.indexOf('Primary') != -1;		election.general = type.indexOf('General') != -1;		election.special = type.indexOf('Special') != -1;		election.runoff = type.indexOf('Runoff') != -1;		election.save();	}		return election;}function getStateByName(name) {		var state = ds.State.find('name = :1', name);	if ( (state == null) || (state.length > 1) )		return null;		return state;}